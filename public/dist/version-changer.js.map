{"version":3,"sources":["/src/index.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["interface GrimoireWindow extends Window {\n    GrimoireJS: any;\n    versionResolve: Promise<void>;\n}\nasync function waitForDOMContentLoaded() {\n    return new Promise<void>(resolve => {\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            resolve();\n        });\n    });\n}\n\nasync function obtainAllScript() {\n    await waitForDOMContentLoaded();\n    const tags = document.getElementsByTagName(\"script\");\n    const result = [];\n    for (let i = 0; i < tags.length; i++) {\n        result.push(tags.item(i));\n    }\n    return result;\n}\n\nasync function obtainScriptWithAs() {\n    const tags = await obtainAllScript();\n    return tags.filter(t => !!t.getAttribute(\"as\"));\n}\n\nfunction parseHash() {\n    const result = {} as { [key: string]: string };\n    if (window.location.hash) {\n        const hash = window.location.hash;\n        const hashes = /#(.*)/.exec(hash)[1].split(\"&\");\n        for (const oneHash of hashes) {\n            const splitted = /([a-zA-Z0-9\\-]+)=([a-zA-Z0-9\\-\\._\\/]+)/.exec(oneHash);\n            if (splitted) {\n                result[splitted[1]] = splitted[2];\n            }\n        }\n    }\n    return result;\n}\n\nasync function rewriteScript(script: HTMLScriptElement, version: string) {\n    const libShort = script.getAttribute(\"as\");\n    let requestURL = \"\";\n    let libSuffix = \"-\" + libShort;\n    if (libSuffix === \"-grimoirejs\") {\n        libSuffix = \"\";\n    }\n    if (/^staging-.+/m.test(version)) {\n        const sha1 = /^staging-(.+)/m.exec(version)[1];\n        requestURL = `https://ci.grimoire.gl/js/${sha1}/grimoire${libSuffix}.js`;\n    } else {\n        if (version) {\n            requestURL = `https://unpkg.com/grimoirejs${libSuffix}@${version}/register/grimoire${libSuffix}.js`;\n        } else {\n            requestURL = `https://unpkg.com/grimoirejs${libSuffix}/register/grimoire${libSuffix}.js`;\n        }\n    }\n\n    return new Promise((resolve, reject) => {\n        script.onload = () => {\n            resolve();\n        };\n        script.setAttribute(\"src\", requestURL);\n    });\n}\n\nasync function exec() {\n    const scripts = await obtainScriptWithAs();\n    const hashes = parseHash();\n    for (let i = 0; i < scripts.length; i++) {\n        await rewriteScript(scripts[i], hashes[scripts[i].getAttribute(\"as\")]);\n    }\n\n}\n\nconst gwin = window as GrimoireWindow;\ngwin.GrimoireJS = {\n    postponeLoading: exec(),\n};\ngwin.versionResolve = gwin.GrimoireJS.postponeLoading;\n"]}